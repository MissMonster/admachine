<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xmlan.machine.module.advertisementMachine.dao.AdvertisementMachineDAO">

    <resultMap id="advertisementMachineResultMap"
               type="com.xmlan.machine.module.advertisementMachine.entity.AdvertisementMachine">
        <id column="id" property="id"/>
        <result column="userID" property="userID"/>
        <result column="name" property="name"/>
        <result column="longitude" property="longitude"/>
        <result column="latitude" property="latitude"/>
        <result column="addTime" property="addTime"/>
        <result column="codeNumber" property="codeNumber"/>
        <result column="control" property="control"/>
        <result column="light" property="light"/>
        <result column="charge" property="charge"/>
        <result column="checked" property="checked"/>
        <result column="remark" property="remark"/>
        <result column="cameraIP" property="cameraIP"/>
        <result column="cameraSequence" property="cameraSequence"/>
        <result column="cameraVerificationCode" property="cameraVerificationCode"/>
        <result column="accessToken" property="accessToken"/>
        <result column="LED" property="LED"/>
        <result column="city" property="city"/>
        <result column="cityCode" property="cityCode"/>
        <result column="updateTime" property="updateTime"/>
        <result column="addrStr" property="addrStr"/>
        <result column="singLampID" property="singLampID"/>
        <collection property="userList" resultMap="userResultMap"/>
    </resultMap>

    <resultMap id="userResultMap" type="com.xmlan.machine.module.user.entity.User">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="authname" property="authname"/>
        <result column="password" property="password"/>
        <result column="roleID" property="roleID"/>
        <result column="url" property="url"/>
        <result column="address" property="address"/>
        <result column="addTime" property="addTime"/>
        <result column="phone" property="phone"/>
        <result column="remark" property="remark"/>
        <collection property="advertisementMachineList" resultMap="advertisementMachineResultMap"/>
    </resultMap>

    <sql id="columns">
        t.id as "id",
        t.userID as "userID",
        t.name as "name",
        t.longitude as "longitude",
        t.latitude as "latitude",
        date_format(t.addTime, '%Y-%m-%d %H:%i:%s') as "addTime",
        t.codeNumber as "codeNumber",
        t.control as "control",
        t.light as "light",
        t.charge as "charge",
        t.checked as "checked",
        t.remark as "remark",
        t.cameraIP as "cameraIP",
        t.cameraSequence as "cameraSequence",
        t.cameraVerificationCode as "cameraVerificationCode",
        t.accessToken as "accessToken",
        t.LED as "LED",
        t.city as "city",
        t.cityCode as "cityCode",
        t.updateTime as "updateTime",
        t.addrStr as "addrStr",
        t.singLampID as "singLampID"
    </sql>
    <select id="adchineListByUserID" resultMap="advertisementMachineResultMap">
        SELECT
            t.*
        FROM
            advertisement_machine AS t
        <where>
            <if test="userID != null and userID != ''">
                t.userID = #{userID}
            </if>
            <if test="name != null and name != ''">
                and t.name like concat('%',#{name},'%')
            </if>
            <if test='addTime != null and addTime != "" and addTime != " "'>
                and t.addTime between #{addTime} and concat(left(#{addTime}, 10), ' 23:59:59')
            </if>
            <if test="codeNumber != null and codeNumber != ''">
                and t.codeNumber = #{codeNumber}
            </if>
        </where>
    </select>
    <select id="atmosphereListByUserID" resultType="com.xmlan.machine.module.advertisementMachine.entity.AdvertisementMachine">
        SELECT
        t.*
        FROM
        advertisement_machine AS t
        <where>
            <if test="userID != null and userID != ''">
                t.userID = #{userID}
            </if>
        </where>
    </select>

    <select id="generalFindList" resultMap="advertisementMachineResultMap">
        SELECT DISTINCT
        t.*
        FROM
        advertisement_machine AS t
        WHERE
        id = (
        SELECT
        machine_user.advertisement_machine_id
        FROM
        machine_user
        <where>
            machine_user.user_id = #{userID}
            <if test='name!=null and name!=""'>
                and t.name like concat('%',#{name},'%')
            </if>
            <if test="codeNumber != null and codeNumber != ''">
                and t.codeNumber = #{codeNumber}
            </if>
            <if test='addTime != null and addTime != "" and addTime != " "'>
                and t.addTime between #{addTime} and concat(left(#{addTime}, 10), ' 23:59:59')
            </if>
        </where>
        )
    </select>

    <select id="findRepeat" resultMap="advertisementMachineResultMap">
        select t.codeNumber
        from advertisement_machine t
        where t.userID = #{userID}
    </select>

    <select id="get" parameterType="java.lang.String" resultType="com.xmlan.machine.module.advertisementMachine.entity.AdvertisementMachine">
        select
        <include refid="columns"/>
        from advertisement_machine t
        where t.id = #{id}
    </select>

    <select id="findAll" resultMap="advertisementMachineResultMap">
        select
        <include refid="columns"/>
        from advertisement_machine t
        <where>
            <if test="name != null and name != ''">
                and t.name like concat('%',#{name},'%')
            </if>
            <if test='addTime != null and addTime != "" and addTime != " "'>
                and t.addTime between #{addTime} and concat(left(#{addTime}, 10), ' 23:59:59')
            </if>
            <if test="codeNumber != null and codeNumber != ''">
                and t.codeNumber = #{codeNumber}
            </if>
        </where>
        <choose>
            <otherwise>
                order by t.addTime, convert(t.name using gbk) asc
            </otherwise>
        </choose>
    </select>

    <select id="findAllMachine" resultType="com.xmlan.machine.module.advertisementMachine.entity.AdvertisementMachine">
        SELECT * FROM advertisement_machine
    </select>

    <select id="findList" parameterType="com.xmlan.machine.module.advertisementMachine.entity.AdvertisementMachine"
            resultMap="advertisementMachineResultMap">
        select
        <include refid="columns"/>
        from advertisement_machine t
        <where>
            <if test="userID != null and userID != ''">
                t.userID = #{userID}
            </if>
            <if test="name != null and name != ''">
                and t.name like concat('%',#{name},'%')
            </if>
            <if test='addTime != null and addTime != "" and addTime != " "'>
                and t.addTime between #{addTime} and concat(left(#{addTime}, 10), ' 23:59:59')
            </if>
            <if test='codeNumber != null and codeNumber != ""'>
                and t.codeNumber = #{codeNumber}
            </if>
            <if test="remark != null and remark != ''">
                and t.remark like concat('%',#{remark},'%')
            </if>
            <if test="longitude != null and longitude != ''">
                and t.longitude = #{longitude}
            </if>
            <if test="latitude != null and latitude != ''">
                and t.latitude = #{latitude}
            </if>
        </where>
        <choose>
            <otherwise>
                order by t.addTime, convert(t.name using gbk) asc
            </otherwise>
        </choose>
    </select>

    <insert id="insertMachineToUser" parameterType="com.xmlan.machine.module.advertisementMachine.entity.AdvertisementMachine">
        INSERT INTO machine_user(
        machine_user.advertisement_machine_id,
        machine_user.user_id
        ) VALUES(
        #{machine_id},
        #{user_id}
        );
    </insert>
    <delete id="deleteMachineForUser" parameterType="com.xmlan.machine.module.advertisementMachine.entity.AdvertisementMachine">
        DELETE FROM machine_user
        WHERE machine_user.user_id =#{user_id}
    </delete>
    <insert id="insert" parameterType="com.xmlan.machine.module.advertisementMachine.entity.AdvertisementMachine">
        insert into advertisement_machine (
        id,
        userID,
        name,
        longitude,
        latitude,
        addTime,
        codeNumber,
        control,
        light,
        charge,
        checked,
        remark,
        cameraIP,
        cameraSequence,
        cameraVerificationCode,
        LED,
        city,
        cityCode,
        updateTime,
        addrStr,
        singLampID
        ) values (
        id,
        #{userID},
        #{name},
        #{longitude},
        #{latitude},
        #{addTime},
        #{codeNumber},
        0,
        0,
        0,
        0,
        #{remark},
        #{cameraIP},
        #{cameraSequence},
        #{cameraVerificationCode},
        #{LED},
        #{city},
        #{cityCode},
        #{updateTime},
        #{addrStr},
        #{singLampID}
        );
    </insert>

    <update id="update" parameterType="com.xmlan.machine.module.advertisementMachine.entity.AdvertisementMachine">
        update advertisement_machine
        set
        userID = #{userID},
        name = #{name},
        addrStr = #{addrStr},
        remark = #{remark},
        cameraIP = #{cameraIP},
        cameraSequence = #{cameraSequence},
        cameraVerificationCode = #{cameraVerificationCode},
        LED = #{LED}
        where id = #{id}
    </update>
    <delete id="delete" parameterType="com.xmlan.machine.module.advertisementMachine.entity.AdvertisementMachine">
        delete from advertisement_machine
        where id = #{id}
    </delete>


    <select id="findAllADMachineByUser" resultMap="advertisementMachineResultMap">
        select
        <include refid="columns"/>
        from advertisement_machine t
        where userID = #{userID}
    </select>
    <select id="findIdByCameraSequence" resultMap="advertisementMachineResultMap">
        select
        <include refid="columns"/>
        from advertisement_machine t
        where cameraSequence = #{cameraSequence}
    </select>
    <select id="getByCodeNumber" resultMap="advertisementMachineResultMap">
        select
        <include refid="columns"/>
        from advertisement_machine t
        where codeNumber = #{codeNumber}
    </select>

    <select id="getAD" resultMap="advertisementMachineResultMap">
        select
        <include refid="columns"/>
        from advertisement_machine t
        where id = #{id}
    </select>

    <update id="updateLocation">
        update advertisement_machine
        set
        longitude = #{longitude},
        latitude = #{latitude},
        updateTime = #{updateTime},
        city = #{city},
        cityCode = #{cityCode},
        addrStr = #{addrStr}
        where id = #{id}
    </update>
    <update id="updateAccessToken">
        update advertisement_machine
        set
        accessToken =#{accessToken}
    </update>
    <update id="lightControl">
        update advertisement_machine
        set light = #{operate}
        where id = #{id}
    </update>

    <update id="updateControl">
        update advertisement_machine
        set control = #{control}
        where id = #{id}
    </update>
    
    <update id="chargeControl">
        update advertisement_machine
        set charge = #{operate}
        where id = #{id}
    </update>

    <update id="checkedControl">
        update advertisement_machine
        set checked = #{operate}
        where id = #{id}
    </update>

    <update id="updateCity">
        update advertisement_machine
        set city = #{city}
        where id = #{id}
    </update>

    <update id="updateSingLampID">
        update advertisement_machine
        set singLampID = #{singLampID}
        where id = #{id}
    </update>
</mapper>