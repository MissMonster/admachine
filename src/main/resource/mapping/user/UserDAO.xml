<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xmlan.machine.module.user.dao.UserDAO">

    <resultMap id="userResultMap" type="com.xmlan.machine.module.user.entity.User">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="authname" property="authname"/>
        <result column="password" property="password"/>
        <result column="roleID" property="roleID"/>
        <result column="url" property="url"/>
        <result column="address" property="address"/>
        <result column="addTime" property="addTime"/>
        <result column="phone" property="phone"/>
        <result column="remark" property="remark"/>
        <result column="founder" property="founder"/>
        <association property="advertisementMachineList" resultMap="advertisementMachineResultMap"/>
    </resultMap>

    <resultMap id="advertisementMachineResultMap"
               type="com.xmlan.machine.module.advertisementMachine.entity.AdvertisementMachine">
        <id column="id" property="id"/>
        <result column="userID" property="userID"/>
        <result column="name" property="name"/>
        <result column="longitude" property="longitude"/>
        <result column="latitude" property="latitude"/>
        <result column="addTime" property="addTime"/>
        <result column="codeNumber" property="codeNumber"/>
        <result column="control" property="control"/>
        <result column="light" property="light"/>
        <result column="charge" property="charge"/>
        <result column="checked" property="checked"/>
        <result column="remark" property="remark"/>
        <result column="cameraIP" property="cameraIP"/>
        <result column="cameraSequence" property="cameraSequence"/>
        <result column="cameraVerificationCode" property="cameraVerificationCode"/>
        <result column="accessToken" property="accessToken"/>
        <result column="LED" property="LED"/>
        <result column="city" property="city"/>
        <result column="cityCode" property="cityCode"/>
        <result column="updateTime" property="updateTime"/>
        <result column="addrStr" property="addrStr"/>
        <result column="singLampID" property="singLampID"/>
    </resultMap>

    <sql id="columns">
        t.id as "id",
        t.username as "username",
        t.authname as "authname",
        t.password as "password",
        t.roleID as "roleID",
        t.url as "url",
        t.address as "address",
        date_format(t.addTime, '%Y-%m-%d %H:%i:%s') as "addTime",
        t.phone as "phone",
        t.remark as "remark",
        t.founder as "founder"
    </sql>

    <select id="findListByUserID" resultType="com.xmlan.machine.module.user.entity.User">
        SELECT
            *
        FROM
            `user`
        WHERE `user`.founder  = (SELECT `user`.founder FROM `user` WHERE id = #{userID})
    </select>

    <select id="get" parameterType="java.lang.String" resultMap="userResultMap">
        select
        <include refid="columns"/>
        from `user` t
        where t.id = #{id}
    </select>

    <select id="findAll" resultMap="userResultMap">
        select
        <include refid="columns"/>
        from `user` t
        order by t.addTime, convert(t.username using gbk) asc
    </select>

    <select id="findList" parameterType="com.xmlan.machine.module.user.entity.User" resultMap="userResultMap">
        select
        <include refid="columns"/>
        from `user` t
        <where>
            <if test="username != null and username != ''">
                t.username like concat('%',#{username},'%')
            </if>
            <if test="authname != null and authname != ''">
                and t.authname like concat('%',#{authname},'%')
            </if>
            <if test="roleID != null and roleID != '' and roleID != '-2'">
                and t.roleID = #{roleID}
            </if>
            <if test="phone != null and phone != ''">
                and t.phone like concat('%',#{phone},'%')
            </if>
            <if test="remark != null and remark != ''">
                and t.remark like concat('%',#{remark},'%')
            </if>
        </where>
        <choose>
            <otherwise>
                order by t.addTime, convert(t.username using gbk) asc
            </otherwise>
        </choose>
    </select>

    <insert id="insert" parameterType="com.xmlan.machine.module.user.entity.User">
        insert into `user` (
        id,
        username,
        authname,
        password,
        roleID,
        url,
        address,
        addTime,
        phone,
        remark,
        founder
        ) values (
        id,
        #{username},
        #{authname},
        #{password},
        #{roleID},
        #{url},
        #{address},
        #{addTime},
        #{phone},
        #{remark},
        #{founder}
        );
    </insert>

    <update id="update" parameterType="com.xmlan.machine.module.user.entity.User">
        update `user`
        set
        username = #{username},
        url = #{url},
        address = #{address},
        phone = #{phone},
        remark = #{remark},
        founder= #{founder}
        where id = #{id}
    </update>

    <delete id="delete" parameterType="com.xmlan.machine.module.user.entity.User">
        delete from `user`
        where id = #{id}
    </delete>

    <update id="changeRoleID" parameterType="com.xmlan.machine.module.user.entity.User">
        update `user`
        set roleID = #{roleID}
        where id = #{id}
    </update>

    <update id="changePassword" parameterType="com.xmlan.machine.module.user.entity.User">
        update `user`
        set password = #{password}
        where id = #{id}
    </update>

    <select id="login" resultMap="userResultMap">
        select
        <include refid="columns"/>
        from `user` t
        where t.authname = #{authname} and t.password = #{password}
    </select>

</mapper>